// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  nickname  String    @unique
  password  String
  phone     String    @unique
  avatar    String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  tokens    Token[]
  Product   Product[]
  fav       Fav[]
}

model Token {
  id        Int      @id @default(autoincrement())
  payload   String   @unique
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int
}

// 국가
model Country {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Site      Site[]
}

// 사이트 목록
model Site {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  contry    Country @relation(fields: [countryId], references: [id])
  countryId Int
}

// 상품
model Product {
  id          Int    @id @default(autoincrement())
  name        String @unique
  description String @db.MediumText
  price       Int
  image       String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User @relation(fields: [userId], references: [id])
  userId Int

  favs Fav[]
}

// 좋아요
model Fav {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
